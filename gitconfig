[rebase]
	autosquash = true
[rerere]
	enabled = true
[init]
	templatedir = /Users/ss/.git_templates
[core]
	excludesfile = /Users/ss/.gitignore_global
[push]
	default = simple
[user]
	name = Scott Speidel
	email = scottspeidel@gmail.com
[color]
	ui = true
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = magenta bold
	frag = blue
	old = red bold
	new = green bold
[color "status"]
	added = green
	changed = blue
	untracked = red
[alias]
	timegrep = log -S
	diffgrep = log -p -S
	alias = "!f(){ git config -l | grep alias; };f"
	st = status --short --branch
	ci = commit
	cl = "!f() { echo 'Remove following files?'; echo; git clean -dn; echo; echo 'Press ENTER to confirm'; read -p 'Press ^C to stop cleanup and exit' a && git clean -df; }; f"
	co = checkout
	cp = cherry-pick
	br = branch
	bra = branch -avv --list
	dc = diff --cached
	di = diff
	ds = "stash show stash@{0} -p"
	ss = "!f(){ git stash show -p stash@{${1}}; };f"
	sl = stash list
	sm = submodule
	sup = submodule update
	sll = "!f() { for s in `git stash list --pretty=format:%gd`; do git stash show -p $s; done; };f"
	fa = fetch --all
	fp = fetch --prune
	unstash = stash pop
	ff = "!f(){ B=$(git rev-parse --abbrev-ref HEAD) && git merge --ff-only origin/$B; };f"
	mm = merge --no-ff -
	k = "!f(){ gitk master origin/master ORIG_HEAD HEAD; };f"
	rmbranch = "!f(){ git branch -d ${1} && git push origin --delete ${1}; };f"
	mkbranch = "!f(){ git checkout -b ${1} && git push origin -u ${1}; };f"
	ls = log --pretty=format:'%C(green)%h%Creset - %s%C(yellow)%d%Creset%n          %aD (%ar %C(red)- %an%Creset)' --graph --color
	ll = log --pretty=format:'%C(green)%h%Creset - %s%C(yellow)%d%Creset%n          %aD (%ar %C(red)- %an%Creset)' --graph --color --all
	unfuck = "!f(){ git reset --hard origin/`git rev-parse --abbrev-ref HEAD`; rm -fv `git st | grep ^? | cut -d' '  -f2-`; }; f"
	up = "pull --ff-only --stat --prune"
	vim = "!f(){ vim -p `git st | cut -c 2- | grep '^M\\|\\?' | cut -d' ' -f2-`; }; f"

[core]
	autocrlf = input
	compression = 9
	excludesfile = ~/.gitignore_global
	filemode = false
[push]
	default = simple
[grep]
	lineNumber = true
[diff]
	tool = diffmerge
[difftool "diffmerge"]
	cmd = /usr/local/bin/diffmerge \"$LOCAL\" \"$REMOTE\"
[merge]
	tool = diffmerge
[mergetool "diffmerge"]
	trustExitCode = true
	cmd = /usr/local/bin/diffmerge --merge --result=\"$MERGED\" \"$LOCAL\" \"$BASE\" \"$REMOTE\"
